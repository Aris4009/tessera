name: Tessera Maven Build

on: 
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master
env: 
  MAVEN_REPO_CACHE_KEY: ${{ github.run_id }}-maven-${{ github.run_number }}-${{ github.run_number }}-${{ github.sha }}
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
              java-version: 11
        - run: |
           mvn install -Dsilent=true -DskipTests=true -Dmaven.javadoc.skip=true -Dchecksyle.skip=true -Dspotbugs.skip=true -Djacoco.skip=true -B
           mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -B
           mvn dependency:go-offline -B
           mvn dependency:resolve-plugins -B
        - uses: actions/cache@v1
          with:
            path: ~/.m2/repository
            key: ${{env.MAVEN_REPO_CACHE_KEY}}
            restore-keys: |
              ${{env.MAVEN_REPO_CACHE_KEY}}
        - uses: homoluctus/slatify@v2.1.2
          if: failure()
          with:
            type: ${{job.status}}
            job_name: Build no checks
            url: ${{ secrets.SLACK_WEBHOOK }}
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{env.MAVEN_REPO_CACHE_KEY}}
          restore-keys: |
            ${{env.MAVEN_REPO_CACHE_KEY}}
      - run: mvn package -pl \!tests/acceptance-test
      - uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          flags: unittests
          fail_ci_if_error: true
      - uses: homoluctus/slatify@v2.1.2
        if: failure()
        with:
          type: ${{job.status}}
          job_name: Unit tests
          url: ${{ secrets.SLACK_WEBHOOK }}

  itest:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 11
        - uses: actions/cache@v1
          with:
            path: ~/.m2/repository
            key: ${{env.MAVEN_REPO_CACHE_KEY}}
            restore-keys: |
              ${{env.MAVEN_REPO_CACHE_KEY}}
        - run: |
           mvn install -Dsilent=true -DskipTests=true -Dmaven.javadoc.skip=true -Dchecksyle.skip=true -Dspotbugs.skip=true -Djacoco.skip=true -B
           mvn verify -pl tests/acceptance-test
        - uses: homoluctus/slatify@v2.1.2
          if: failure()
          with:
            type: ${{job.status}}
            job_name: Integration tests
            url: ${{ secrets.SLACK_WEBHOOK }}

  vaultTests:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 11
        - uses: actions/cache@v1
          with:
            path: ~/.m2/repository
            key: ${{env.MAVEN_REPO_CACHE_KEY}}
            restore-keys: |
             ${{env.MAVEN_REPO_CACHE_KEY}}
        - run: |
            wget https://releases.hashicorp.com/vault/1.2.2/vault_1.2.2_linux_amd64.zip -O /tmp/vault_1.2.2_linux_amd64.zip
            mkdir -p vault/bin && pushd $_
            unzip /tmp/vault_1.2.2_linux_amd64.zip
            export PATH=$PATH:$PWD && popd

            # Azure client makes request to microsoft URL so set up redirect to the wiremock server that is created in the test:
            # 1. update /etc/hosts so the login URL resolves to a random IP
            # 2. update iptables so traffic to the random IP is redirected to localhost and a random port
            # 3. provide the random port to tessera's tests so it can configure the wiremock server to listen to that port
            REDIRECT=157.166.226.25 # a random IP
            WIREMOCK_PORT_TEST=53921 # a random port
            echo "$REDIRECT login.microsoftonline.com" | sudo tee -a /etc/hosts
            sudo iptables -t nat -A OUTPUT -p tcp --dport 80 -d $REDIRECT -j DNAT --to-destination 127.0.0.1:$WIREMOCK_PORT_TEST

            mvn install -Dsilent=true -DskipTests=true -Dmaven.javadoc.skip=true -Dchecksyle.skip=true -Dspotbugs.skip=true -Djacoco.skip=true -B
            WIREMOCK_PORT_TEST=$WIREMOCK_PORT_TEST mvn verify -pl tests/acceptance-test -P vault-acceptance-tests
        - uses: homoluctus/slatify@v2.1.2
          if: failure()
          with:
            type: ${{job.status}}
            job_name: Vault integration tests
            url: ${{ secrets.SLACK_WEBHOOK }}

  atest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{env.MAVEN_REPO_CACHE_KEY}}
          restore-keys: |
            ${{env.MAVEN_REPO_CACHE_KEY}}
      - run: |
          mvn install -Dsilent=true -DskipTests=true -Dmaven.javadoc.skip=true -Dchecksyle.skip=true -Dspotbugs.skip=true -Djacoco.skip=true -B -ntp
      - uses: docker/build-push-action@v1
        with:
          repository: quorumengineering/tessera
          tags: latest
          push: false
          dockerfile: .github/workflows/DockerfileTest
          build_args: JAR_FILE=tessera-dist/tessera-app/target/*-app.jar
      - run:
          docker run --rm --network host -v /var/run/docker.sock:/var/run/docker.sock -v /tmp/acctests:/tmp/acctests quorumengineering/acctests:latest test -Pauto -Dtags="basic || basic-istanbul || networks/typical::istanbul" -Dauto.outputDir=/tmp/acctests -Dnetwork.forceDestroy=true
      - uses: homoluctus/slatify@v2.1.2
        if: failure()
        with:
          type: ${{job.status}}
          job_name: Acceptance tests
          url: ${{ secrets.SLACK_WEBHOOK }}

  slackNotification:
    runs-on: ubuntu-latest
    needs: [build,atest,itest,test,vaultTests]
    steps:
    - uses: homoluctus/slatify@v2.1.2
      with:
        type: ${{job.status}}
        job_name: Build
        url: ${{ secrets.SLACK_WEBHOOK }}
